     1                                  ; add1.asm
     2                                  SECTION .data
     3 00000000 456E74657220746865-         message1: db "Enter the first number: ", 0
     4 00000009 206669727374206E75-
     5 00000012 6D6265723A2000     
     6 00000019 456E74657220746865-         message2: db "Enter the second number: ", 0
     7 00000022 207365636F6E64206E-
     8 0000002B 756D6265723A2000   
     9 00000033 256400                      formatin: db "%d", 0
    10 00000036 25640A00                    formatout: db "%d", 10, 0 ; newline, nul terminator
    11 0000003A 00<rept>                    integer1: times 4 db 0 ; 32-bits integer = 4 bytes
    12 0000003E 00<rept>                    integer2: times 4 db 0 ;
    13                                  SECTION .text
    14                                     global main 
    15                                     extern scanf 
    16                                     extern printf     
    17                                  
    18                                  main:
    19                                  
    20 00000000 53                         push ebx ; save registers
    21 00000001 51                         push ecx
    22 00000002 68[00000000]               push message1
    23 00000007 E8(00000000)               call printf
    24                                  
    25 0000000C 83C404                     add esp, 4 ; remove parameters
    26 0000000F 68[3A000000]               push integer1 ; address of integer1 (second parameter)
    27 00000014 68[33000000]               push formatin ; arguments are right to left (first parameter)
    28 00000019 E8(00000000)               call scanf
    29                                  
    30 0000001E 83C408                     add esp, 8 ; remove parameters
    31 00000021 68[19000000]               push message2
    32 00000026 E8(00000000)               call printf
    33                                  
    34 0000002B 83C404                     add esp, 4 ; remove parameters
    35 0000002E 68[3E000000]               push integer2 ; address of integer2
    36 00000033 68[33000000]               push formatin ; arguments are right to left
    37 00000038 E8(00000000)               call scanf
    38                                  
    39 0000003D 83C408                     add esp, 8 ; remove parameters
    40                                  
    41 00000040 8B1D[3A000000]             mov ebx, dword [integer1]
    42 00000046 8B0D[3E000000]             mov ecx, dword [integer2]
    43 0000004C 01CB                       add ebx, ecx ; add the values          ; the addition
    44 0000004E 53                         push ebx
    45 0000004F 68[36000000]               push formatout
    46 00000054 E8(00000000)               call printf                            ; call printf to display the sum
    47 00000059 83C408                     add esp, 8                             ; remove parameters
    48 0000005C 59                         pop ecx
    49 0000005D 5B                         pop ebx ; restore registers in reverse order
    50 0000005E B800000000                 mov eax, 0 ; no error
    51 00000063 C3                         ret
